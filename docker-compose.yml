version: "3.8"

services:
    backend: 
      build:
        context: .
        dockerfile: ./docker/Dockerfile.backend
      ports:
        - 8080:8080
      environment:
        - DATABASE_URL=postgresql://postgres:mypass@postgres:5432/my_docker_app
      depends_on:
        postgres:
          condition: service_healthy
    frontend:
      build: 
        context: .
        dockerfile: ./docker/Dockerfile.frontend
        args:
          DATABASE_URL: "postgresql://postgres:mypass@postgres:5432/my_docker_app"
      ports:
        - 3000:3000
      environment:
        - DATABASE_URL=postgresql://postgres:mypass@postgres:5432/my_docker_app
      depends_on:
        postgres:
          condition: service_healthy
    websocket:
      build:
        context: .
        dockerfile: ./docker/Dockerfile.websocket
      ports: 
        - 8081:8081
      environment:
        - DATABASE_URL=postgresql://postgres:mypass@postgres:5432/my_docker_app
      depends_on:
        postgres:
          condition: service_healthy
    postgres:
      image: postgres
      restart: always
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: mypass
        POSTGRES_DB: my_docker_app
      ports:
      - 5432:5432
      volumes:
        - postgres_data:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD", "pg_isready", "-U", "postgres"]
        interval: 10s
        retries: 5
        start_period: 10s
volumes:
  postgres_data:
